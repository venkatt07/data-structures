#include <stdio.h>
#include <stdlib.h>

// Function to merge two sorted arrays and return the result
int* mergeSortedArrays(int* nums1, int m, int* nums2, int n, int* resultSize) {
    *resultSize = m + n;
    int* result = (int*)malloc(*resultSize * sizeof(int));

    int i = 0, j = 0, k = 0;

    while (i < m && j < n) {
        if (nums1[i] <= nums2[j]) {
            result[k++] = nums1[i++];
        } else {
            result[k++] = nums2[j++];
        }
    }

    // Copy the remaining elements from nums1, if any
    while (i < m) {
        result[k++] = nums1[i++];
    }

    // Copy the remaining elements from nums2, if any
    while (j < n) {
        result[k++] = nums2[j++];
    }

    return result;
}

int main() {
    int nums1[] = {1, 3, 5, 7};
    int m = sizeof(nums1) / sizeof(nums1[0]);

    int nums2[] = {2, 4, 6, 8, 10};
    int n = sizeof(nums2) / sizeof(nums2[0]);

    int resultSize;
    int* result = mergeSortedArrays(nums1, m, nums2, n, &resultSize);

    printf("Sum of the two sorted arrays: ");
    for (int i = 0; i < resultSize; i++) {
        printf("%d ", result[i]);
    }
    printf("\n");

    // Free the memory allocated for the result array
    free(result);

    return 0;
}
